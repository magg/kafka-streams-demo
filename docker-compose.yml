version: "3"
services:

  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      KAFKA_ADVERTISED_HOST_NAME: kafka
    ports:
      - 2181:2181
    networks:
      klar:

  kafka:
    container_name: kafka
    image: wurstmeister/kafka:latest
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_LISTENERS: INSIDE://localhost:9093,OUTSIDE://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 50
      KAFKA_LOG_DIRS: /kafka/logs
      KAFKA_ADVERTISED_PORT: 9092
    ports:
      - 9092:9092
      - 9093:9093
    depends_on:
      - zookeeper
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      klar:

  worker-node-1:
    build:
      context: .
    ports:
      - "4000:8080"
    environment:
      - "WORKER_NAME=worker.1"
    #restart: on-failure
    depends_on:
      - kafka
    networks:
      klar:

  worker-node-2:
    build:
      context: .
    ports:
      - "5000:8080"
    environment:
      - "WORKER_NAME=worker.2"
    #restart: on-failure
    depends_on:
      - kafka
    networks:
      klar:


networks:
  klar:

